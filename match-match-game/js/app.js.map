{"version":3,"sources":["webpack:///./app.ts","webpack:///./ts/components/base-components.ts","webpack:///./ts/components/buttons/buttons.ts","webpack:///./ts/components/cards-field/cards-field.ts","webpack:///./ts/components/cards/cards.ts","webpack:///./ts/components/inputs/inputFile.ts","webpack:///./ts/components/inputs/inputs.ts","webpack:///./ts/components/modal-register/modal-register.ts","webpack:///./ts/components/overlay/overlay.ts","webpack:///./ts/components/timer/timer.ts","webpack:///./ts/components/user/user.ts","webpack:///./ts/database/indexedDB.ts","webpack:///./ts/layout/header.ts","webpack:///./ts/layout/main.ts","webpack:///./ts/pages/aboutGame.ts","webpack:///./ts/pages/bestScore.ts","webpack:///./ts/pages/game.ts","webpack:///./ts/pages/gameSettings.ts","webpack:///./ts/render/render.ts","webpack:///./ts/router/router.ts","webpack:///./ts/shared/delay.ts","webpack:///./ts/shared/routes.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/global","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/publicPath","webpack:///webpack/startup"],"names":["database","IndexedDB","getInstance","openDB","setTimeout","getAllRecords","header","Header","gamePage","Game","gameSettingsPage","GameSettings","Render","render","router","Router","addRoute","routing","window","onload","onloadRoute","onhashchange","navigate","btnReg","element","addEventListener","textContent","location","hash","clearSelects","index","res","fetch","cat","json","images","map","name","category","newGame","difficultGameValue","start","cardShirtValue","undefined","tag","classes","idEl","this","document","createElement","classList","add","id","type","CardsField","BaseComponent","super","cards","innerHTML","clearTimeout","timeoutToFlip","forEach","card","append","flipToFront","SHOW_TIME","Card","image","isFlipped","insertAdjacentHTML","flip","isFront","Promise","toggle","once","labelClass","createInput","createImg","inputLabel","inputElement","files","file","reader","FileReader","setAttribute","result","inputFileReaderResult","readAsDataURL","InputForm","className","regExp","labelFor","labelText","inputName","inputType","inputPlaceholder","createLabel","inputField","inputCheckbox","inputCheckboxWrapper","querySelector","createCheckbox","createSpan","inputHandler","label","placeholder","required","disabled","span","validity","valid","test","value","checked","ModalReg","inputFirstName","inputLastName","inputEmail","inputFile","InputFile","addListener","btnSubmit","Btn","btnCancel","clearModal","indexedDB","userData","User","instance","modalReg","e","addRecord","getUser","getRecord","preventDefault","h2","regWrapper","regWrapperLeft","regWrapperRight","regBtnContainer","reset","Overlay","devideZeros","time","Timer","difference","startTime","updatedTime","seconsForScore","seconds","minutes","countDownTime","Date","getTime","intervalTimer","setInterval","updateTimer","clearInterval","countDownTimerRender","tempTime","Math","floor","firstNameInput","lastNameInput","emailInput","fileInput","scoreInput","lastName","email","score","dbName","dbVersion","key","data","allRecors","dbrequest","open","onupgradeneeded","createObjectStore","keyPath","createIndex","onsuccess","db","storage","req","transaction","objectStore","get","openCursor","topTen","cursor","push","continue","put","console","log","onerror","isRegister","overlay","createModal","createAvatar","headerNavListItem","querySelectorAll","headerWrapper","appendChild","headerContainer","logoLink","href","nav","navList","IDBImage","Main","mainWrapper","mainContainer","AboutGame","BestScore","players","createWrapper","fillData","bestScoreWrapper","player","createPlayer","bestScoreResult","isAnimation","timer","cardsField","BtnSubmit","countCards","successMatch","wrongMatch","size","gameTimers","clear","stopTimer","clearTimer","countDownTimer","root","documentElement","style","setProperty","sqrt","gameFieldSize","indexHelper","i","length","concat","url","sort","random","cardHandler","addCards","startTimer","flipToBack","activeCard","playerData","outputResult","updateRecord","delay","remove","all","min","sec","windowModal","lastElementChild","contains","cardShirt","selectedIndex","difficultGame","rootElement","fragment","createDocumentFragment","createHeader","createLogo","createNav","createBtn","main","gameSettings","bodyContainer","page","nameRoute","entry","entries","x","item","dataset","link","body","routes","arr","route","deffaultRoute","find","Error","component","currentRouteName","slice","currentRoute","timeout","aboutGamePage","bestScorePage","renderPage","getPlayerData","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","g","globalThis","Function","r","Symbol","toStringTag","Object","defineProperty","scriptUrl","importScripts","currentScript","src","scripts","getElementsByTagName","replace","p"],"mappings":"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","file":"js/app.js","sourcesContent":["import \"./app.scss\";\nimport \"./assets/icons/question.svg\";\nimport \"./assets/icons/settings.svg\";\nimport \"./assets/icons/star.svg\";\nimport \"./assets/icons/select-arrow.svg\";\nimport \"./assets/icons/correct.svg\";\nimport \"./assets/icons/wrong.svg\";\nimport \"./assets/img/cards-example.jpg\";\nimport \"./assets/img/game-settings.jpg\";\nimport \"./assets/img/register-form.jpg\";\nimport \"./assets/img/avatar.png\";\nimport \"./assets/img/avatar-login.jpg\";\nimport \"./assets/img/player1.jpg\";\nimport \"./assets/img/shirt.jpg\";\nimport { Render } from \"./ts/render/render\";\nimport { GameSettings } from \"./ts/pages/gameSettings\";\nimport { Game } from \"./ts/pages/game\";\nimport { ImageCategory } from \"./ts/api/api\";\nimport { IndexedDB } from \"./ts/database/indexedDB\";\nimport { Router } from \"./ts/router/router\";\nimport { routing } from \"./ts/shared/routes\";\nimport { Header } from \"./ts/layout/header\";\n\nconst database = IndexedDB.getInstance();\ndatabase.openDB();\nsetTimeout(() => {\n  database.getAllRecords(\"user\", \"rating\");\n}, 500);\n\nconst header = Header.getInstance();\nconst gamePage = Game.getInstance();\nconst gameSettingsPage = GameSettings.getInstance();\n\nasync function start(index: number) {\n  const res = await fetch(\"./images.json\");\n  const categories: ImageCategory[] = await res.json();\n  const cat = categories[index];\n  const images = cat.images.map((name: string) => `${cat.category}/${name}`);\n  gamePage.newGame(\n    images,\n    (gameSettingsPage.difficultGameValue as number) || 16\n  );\n}\n\nconst render = Render.getInstance();\nrender.render();\n\nconst router = Router.getInstance();\nrouter.addRoute(routing);\n\nwindow.onload = (): void => {\n  router.onloadRoute();\n};\n\nwindow.onhashchange = (): void => {\n  router.navigate();\n};\n\nheader.btnReg.element.addEventListener(\"click\", () => {\n  if (header.btnReg.element.textContent === \"Start Game\") {\n    window.location.hash = \"game\";\n    gameSettingsPage.clearSelects();\n    start((gameSettingsPage.cardShirtValue as number) - 1 || 0);\n    setTimeout(() => {\n      header.btnReg.element.textContent = \"Stop Game\";\n    }, 100);\n  }\n\n  if (header.btnReg.element.textContent === \"Stop Game\") {\n    gameSettingsPage.cardShirtValue = undefined;\n    gameSettingsPage.difficultGameValue = undefined;\n    router.onloadRoute();\n    header.btnReg.element.textContent = \"Start Game\";\n  }\n});\n","export class BaseComponent {\n  readonly element: HTMLElement;\n\n  constructor(\n    tag: keyof HTMLElementTagNameMap = \"div\",\n    classes: string[] = [],\n    idEl = \"\"\n  ) {\n    this.element = document.createElement(tag);\n    this.element.classList.add(...classes);\n\n    if (idEl) {\n      this.element.id = idEl;\n    }\n  }\n}\n","export class Btn {\n  readonly element: HTMLButtonElement;\n\n  constructor(\n    private readonly classes: string[] = [],\n    private readonly type: string = \"button\"\n  ) {\n    this.element = document.createElement(\"button\");\n    this.element.classList.add(...this.classes);\n    this.element.type = this.type;\n  }\n}\n","import { BaseComponent } from \"../base-components\";\nimport { Card } from \"../cards/cards\";\n\nconst SHOW_TIME = 30;\n\nexport class CardsField extends BaseComponent {\n  private timeoutToFlip!: ReturnType<typeof setTimeout>;\n\n  private cards: Card[] = [];\n\n  constructor() {\n    super(\"div\", [\"game__field\"]);\n  }\n\n  clear() {\n    this.cards = [];\n    this.element.innerHTML = \"\";\n    clearTimeout(this.timeoutToFlip);\n  }\n\n  addCards(cards: Card[]) {\n    this.cards = cards;\n    this.cards.forEach((card) => this.element.append(card.element));\n    this.timeoutToFlip = setTimeout(() => {\n      this.cards.forEach((card) => card.flipToFront());\n    }, SHOW_TIME * 1000);\n  }\n}\n","import { BaseComponent } from \"../base-components\";\n\nconst FLIP_CLASS = \"card--flipped\";\n\nexport class Card extends BaseComponent {\n  private card: HTMLDivElement;\n\n  isFlipped = false;\n\n  constructor(readonly image: string) {\n    super(\"div\", [\"card-container\"]);\n\n    this.card = document.createElement(\"div\");\n    this.card.classList.add(\"card\", \"card--flipped\");\n    this.element.append(this.card);\n\n    this.card.insertAdjacentHTML(\n      \"afterbegin\",\n      `<div class=\"card__front\" style=\"background-image: url(./assets/img/${image})\"></div>\n    <div class=\"card__back\"></div>`\n    );\n  }\n\n  flipToBack() {\n    this.isFlipped = false;\n    return this.flip(true);\n  }\n\n  flipToFront() {\n    this.isFlipped = true;\n    return this.flip();\n  }\n\n  private flip(isFront = false): Promise<void> {\n    return new Promise((res) => {\n      this.card.classList.toggle(FLIP_CLASS, isFront);\n      this.card.addEventListener(\"transitionend\", () => res(), {\n        once: true,\n      });\n    });\n  }\n}\n","export class InputFile {\n  inputLabel!: HTMLLabelElement;\n\n  inputElement!: HTMLInputElement;\n\n  inputFileReaderResult!: string | ArrayBuffer | null;\n\n  constructor(private labelClass: string) {\n    this.createInput();\n    this.createImg(this.labelClass);\n  }\n\n  createImg(labelClass: string) {\n    this.inputLabel = document.createElement(\"label\");\n    this.inputLabel.classList.add(labelClass);\n    this.inputLabel.append(this.inputElement);\n  }\n\n  createInput() {\n    this.inputElement = document.createElement(\"input\");\n    this.inputElement.classList.add(\"register__input-file\");\n    this.inputElement.type = \"file\";\n  }\n\n  addListener() {\n    this.inputElement.addEventListener(\"change\", () => {\n      if (this.inputElement.files) {\n        const file = this.inputElement.files[0];\n        const reader = new FileReader();\n        reader.onload = () => {\n          this.inputLabel.setAttribute(\n            \"style\",\n            `background-image: url(${reader.result})`\n          );\n          this.inputFileReaderResult = reader.result;\n        };\n        reader.readAsDataURL(file);\n      }\n    });\n  }\n}\n","import { BaseComponent } from \"../base-components\";\n\nexport class InputForm extends BaseComponent {\n  private inputCheckboxWrapper: HTMLLabelElement;\n\n  inputField: HTMLInputElement;\n\n  inputCheckbox: HTMLInputElement;\n\n  constructor(\n    public readonly className: string,\n    private readonly regExp: RegExp,\n    private readonly labelClass: string,\n    private readonly labelFor = \"\",\n    private readonly labelText = \"\",\n    private readonly inputName: string,\n    private readonly inputType = \"text\",\n    private readonly inputPlaceholder = \"\"\n  ) {\n    super(\"div\", [className]);\n    this.createLabel(this.labelClass, this.labelFor, this.labelText);\n    this.inputField = document.createElement(\"input\") as HTMLInputElement;\n    this.inputCheckbox = document.createElement(\"input\") as HTMLInputElement;\n    this.createInput(this.inputName, this.inputType, this.inputPlaceholder);\n    this.createLabel(\"register__input-wrapper\");\n    this.inputCheckboxWrapper = this.element.querySelector(\n      \".register__input-wrapper\"\n    ) as HTMLLabelElement;\n    this.createCheckbox();\n    this.createSpan();\n    this.inputField.addEventListener(\"input\", () => {\n      this.inputHandler();\n    });\n  }\n\n  createLabel(labelClass: string, labelFor = \"\", labelText = \"\") {\n    const label = document.createElement(\"label\");\n    label.textContent = labelText;\n    label.classList.add(labelClass);\n    label.setAttribute(\"for\", labelFor);\n    this.element.append(label);\n  }\n\n  createInput(inputName: string, inputType: string, inputPlaceholder = \"\") {\n    this.inputField.classList.add(\"register__input\");\n    this.inputField.type = inputType;\n    this.inputField.name = inputName;\n    this.inputField.placeholder = inputPlaceholder;\n    this.inputField.required = true;\n    this.element.append(this.inputField);\n  }\n\n  createCheckbox() {\n    this.inputCheckbox.classList.add(\"register__input-checkbox\");\n    this.inputCheckbox.type = \"checkbox\";\n    this.inputCheckbox.disabled = true;\n    this.inputCheckboxWrapper.append(this.inputCheckbox);\n  }\n\n  createSpan() {\n    const span = document.createElement(\"span\");\n    span.classList.add(\"register__input-checkbox-checkmark\");\n    this.inputCheckboxWrapper.append(span);\n  }\n\n  inputHandler() {\n    if (\n      this.inputField.validity.valid &&\n      this.regExp.test(this.inputField.value)\n    ) {\n      this.inputCheckbox.checked = true;\n    } else this.inputCheckbox.checked = false;\n  }\n}\n","import { IndexedDB } from \"../../database/indexedDB\";\nimport { BaseComponent } from \"../base-components\";\nimport { Btn } from \"../buttons/buttons\";\nimport { InputFile } from \"../inputs/inputFile\";\nimport { InputForm } from \"../inputs/inputs\";\nimport { User } from \"../user/user\";\n\nexport class ModalReg extends BaseComponent {\n  private readonly btnSubmit: Btn;\n\n  private readonly btnCancel: Btn;\n\n  private readonly inputFirstName: InputForm;\n\n  private readonly inputLastName: InputForm;\n\n  private readonly inputEmail: InputForm;\n\n  private readonly inputFile: InputFile;\n\n  modalReg: HTMLFormElement | undefined;\n\n  private userData: User;\n\n  private indexedDB: IndexedDB;\n\n  private static instance: ModalReg;\n\n  constructor() {\n    super(\"div\", [\"modal\"]);\n    this.inputFirstName = new InputForm(\n      \"register__first-name\",\n      /^\\p{Letter}{1,30}$/iu,\n      \"register__label-form\",\n      \"reg-first-name\",\n      \"First Name\",\n      \"reg-first-name\",\n      \"text\",\n      \"Enter a First Name\"\n    );\n    this.inputLastName = new InputForm(\n      \"register__last-name\",\n      /^\\p{Letter}{1,30}$/iu,\n      \"register__label-form\",\n      \"reg-last-name\",\n      \"Last Name\",\n      \"reg-last-name\",\n      \"text\",\n      \"Enter a Last Name\"\n    );\n    this.inputEmail = new InputForm(\n      \"register__e-mail\",\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n      \"register__label-form\",\n      \"reg-e-mail\",\n      \"E-mail\",\n      \"reg-e-mail\",\n      \"email\",\n      \"Enter a E-mail\"\n    );\n\n    this.inputFile = new InputFile(\"register__avt-cotnainer\");\n    this.inputFile.addListener();\n    this.btnSubmit = new Btn([\"btn\", \"btn--blue\"], \"submit\");\n    this.btnSubmit.element.disabled = true;\n    this.btnCancel = new Btn([\"btn\", \"btn--light\"]);\n    this.btnCancel.element.addEventListener(\"click\", () => {\n      this.clearModal();\n    });\n    this.inputEmail.inputField.addEventListener(\"input\", () => {\n      if (this.inputEmail.inputCheckbox.checked) {\n        this.btnSubmit.element.disabled = false;\n      } else this.btnSubmit.element.disabled = true;\n    });\n    this.indexedDB = IndexedDB.getInstance();\n    this.userData = new User(\"\", \"\", \"\", \"\", 0);\n  }\n\n  public static getInstance(): ModalReg {\n    if (!ModalReg.instance) {\n      ModalReg.instance = new ModalReg();\n    }\n\n    return ModalReg.instance;\n  }\n\n  createModal(): void {\n    this.modalReg = document.createElement(\"form\");\n    this.modalReg.classList.add(\"register\");\n    this.element.append(this.modalReg);\n\n    this.modalReg?.addEventListener(\"submit\", (e: Event) => {\n      this.userData = new User(\n        this.inputFirstName.inputField.value,\n        this.inputLastName.inputField.value,\n        this.inputEmail.inputField.value,\n        this.inputFile.inputFileReaderResult,\n        0\n      );\n      this.indexedDB.addRecord(\"user\", this.userData.getUser());\n      setTimeout(() => {\n        this.indexedDB.getRecord(\"user\");\n      }, 500);\n      e.preventDefault();\n      this.clearModal();\n    });\n\n    const h2 = document.createElement(\"h2\");\n    h2.classList.add(\"register__title\");\n    h2.textContent = \"Register new Player\";\n\n    const regWrapper = document.createElement(\"div\");\n    regWrapper.classList.add(\"register__wrapper\");\n\n    this.modalReg.append(h2, regWrapper);\n\n    const regWrapperLeft = document.createElement(\"div\");\n    regWrapperLeft.classList.add(\"register__wrapper--left\");\n    regWrapper.append(regWrapperLeft);\n\n    regWrapperLeft.append(\n      this.inputFirstName.element,\n      this.inputLastName.element,\n      this.inputEmail.element\n    );\n\n    const regWrapperRight = document.createElement(\"div\");\n    regWrapperRight.classList.add(\"register__wrapper--right\");\n    regWrapper.append(regWrapperRight);\n\n    const regBtnContainer = document.createElement(\"div\");\n    regBtnContainer.classList.add(\"register__btn-container\");\n    regWrapperRight.append(this.inputFile.inputLabel, regBtnContainer);\n\n    this.btnSubmit.element.textContent = \"Add User\";\n    this.btnCancel.element.textContent = \"Cancel\";\n    regBtnContainer.append(this.btnSubmit.element, this.btnCancel.element);\n  }\n\n  clearModal() {\n    this.modalReg?.reset();\n    this.element.innerHTML = \"\";\n  }\n}\n","import { BaseComponent } from \"../base-components\";\n\nexport class Overlay extends BaseComponent {\n  constructor() {\n    super(\"div\", [\"overlay\"]);\n  }\n}\n","import { BaseComponent } from \"../base-components\";\n\nconst devideZeros = (time: number) => {\n  if (time < 10) {\n    return `0${time}`;\n  }\n  return `${time}`;\n};\n\nexport class Timer extends BaseComponent {\n  private difference: number;\n\n  private startTime: number;\n\n  private updatedTime: number;\n\n  private countDownTime: number;\n\n  seconsForScore: number;\n\n  seconds: number;\n\n  minutes: number;\n\n  private intervalTimer!: ReturnType<typeof setTimeout>;\n\n  constructor() {\n    super(\"div\", [\"game__timer\"]);\n    this.difference = 0;\n    this.startTime = 0;\n    this.updatedTime = 0;\n    this.seconsForScore = 0;\n    this.seconds = 0;\n    this.minutes = 0;\n    this.countDownTime = 30;\n    this.element.insertAdjacentHTML(\n      \"afterbegin\",\n      `<span class=\"game__timer-minutes\">00</span>:<span class=\"game__timer-seconds\">30</span>`\n    );\n  }\n\n  clearTimer() {\n    this.element.innerHTML = `<span class=\"game__timer-minutes\">00</span>:<span class=\"game__timer-seconds\">30</span>`;\n  }\n\n  startTimer() {\n    this.startTime = new Date().getTime();\n    this.intervalTimer = setInterval(() => {\n      this.updatedTime = new Date().getTime();\n      this.difference = this.updatedTime - this.startTime;\n      this.updateTimer();\n      this.seconsForScore += 1;\n    }, 1000);\n  }\n\n  stopTimer() {\n    clearInterval(this.intervalTimer);\n    this.difference = 0;\n    this.startTime = 0;\n    this.updatedTime = 0;\n    this.seconds = 0;\n    this.minutes = 0;\n    this.seconsForScore = 0;\n    this.countDownTime = 30;\n  }\n\n  countDownTimer() {\n    this.intervalTimer = setInterval(() => {\n      this.countDownTime -= 1;\n      this.countDownTimerRender();\n    }, 1000);\n  }\n\n  countDownTimerRender() {\n    this.element.innerHTML = `<span class=\"game__timer-minutes\">00</span>:\n    <span class=\"game__timer-seconds\">${devideZeros(\n    this.countDownTime\n  )}</span>`;\n  }\n\n  updateTimer() {\n    const tempTime: number = this.difference;\n    this.seconds = Math.floor((tempTime % (1000 * 60)) / 1000);\n    this.minutes = Math.floor((tempTime % (1000 * 60 * 60)) / (1000 * 60));\n    this.element.innerHTML = `<span class=\"game__timer-minutes\">${devideZeros(\n      this.minutes\n    )}</span>\n                              :\n                              <span class=\"game__timer-seconds\">${devideZeros(\n    this.seconds\n  )}</span>`;\n  }\n}\n","import { IUser } from \"../../api/api\";\n\nexport class User implements IUser {\n  name: string;\n\n  lastName: string;\n\n  email: string;\n\n  image: string | ArrayBuffer | null;\n\n  score: number;\n\n  constructor(\n    private readonly firstNameInput: string,\n    private readonly lastNameInput: string,\n    private readonly emailInput: string,\n    private readonly fileInput: string | ArrayBuffer | null,\n    private readonly scoreInput: number\n  ) {\n    this.name = this.firstNameInput;\n    this.lastName = this.lastNameInput;\n    this.email = this.emailInput;\n    this.image = this.fileInput;\n    this.score = this.scoreInput;\n  }\n\n  getUser() {\n    return {\n      name: this.name,\n      lastName: this.lastName,\n      email: this.email,\n      image: this.fileInput,\n      score: this.score,\n    };\n  }\n}\n","export class IndexedDB {\n  db!: IDBDatabase;\n\n  private key: IDBValidKey;\n\n  data: Record<string, unknown>;\n\n  allRecors: Array<{\n    name: string;\n    lastName: string;\n    email: string;\n    image: string | ArrayBuffer | null;\n    score: number;\n  }>;\n\n  private static instance: IndexedDB;\n\n  constructor(\n    public readonly dbName: string,\n    public readonly dbVersion: number\n  ) {\n    this.key = \"\";\n    this.data = {};\n    this.allRecors = [];\n  }\n\n  public static getInstance(): IndexedDB {\n    if (!IndexedDB.instance) {\n      IndexedDB.instance = new IndexedDB(\"AleksandroSN\", 1);\n    }\n\n    return IndexedDB.instance;\n  }\n\n  openDB() {\n    const dbrequest = indexedDB.open(this.dbName, this.dbVersion);\n    dbrequest.onupgradeneeded = () => {\n      const db = dbrequest.result;\n      const storage = db.createObjectStore(\"user\", {\n        keyPath: \"email\",\n      });\n      storage.createIndex(\"rating\", \"score\");\n    };\n    dbrequest.onsuccess = () => {\n      this.db = dbrequest.result;\n    };\n  }\n\n  addRecord(storage: string, data: unknown) {\n    const tx = this.db.transaction(storage, \"readwrite\");\n    const store = tx.objectStore(storage);\n    const req = store.add(data);\n    req.onsuccess = () => {\n      this.key = req.result;\n    };\n  }\n\n  getRecord(storage: string) {\n    const tx = this.db.transaction(storage, \"readonly\");\n    const store = tx.objectStore(storage);\n    const req = store.get(this.key);\n    req.onsuccess = () => {\n      this.data = req.result;\n    };\n  }\n\n  getAllRecords(storage: string, index: string) {\n    const tx = this.db.transaction(storage, \"readonly\");\n    const store = tx.objectStore(storage);\n    const storeIndex = store.index(index);\n    const req = storeIndex.openCursor(null, \"prev\");\n    this.allRecors = [];\n    let topTen = 10;\n    req.onsuccess = () => {\n      const cursor = req.result as IDBCursorWithValue;\n      if (topTen && cursor !== null) {\n        this.allRecors.push(cursor.value);\n        topTen -= 1;\n        cursor.continue();\n      }\n    };\n  }\n\n  updateRecord(storage: string, data: unknown) {\n    const tx = this.db.transaction(storage, \"readwrite\");\n    const store = tx.objectStore(storage);\n    const req = store.put(data);\n    req.onsuccess = () => {\n      console.log('SUCESS');  \n    };\n    req.onerror = () => {};\n  }\n}\n","import { BaseComponent } from \"../components/base-components\";\nimport { Btn } from \"../components/buttons/buttons\";\nimport { ModalReg } from \"../components/modal-register/modal-register\";\nimport { Overlay } from \"../components/overlay/overlay\";\nimport { IndexedDB } from \"../database/indexedDB\";\n\nexport class Header extends BaseComponent {\n  headerContainer: HTMLDivElement | undefined;\n\n  headerNavListItem: NodeList;\n\n  btnReg: Btn;\n\n  isRegister = false;\n\n  private readonly overlay: Overlay;\n\n  private readonly modalReg: ModalReg;\n\n  private readonly indexedDB: IndexedDB;\n\n  private static instance: Header;\n\n  constructor() {\n    super(\"header\", [\"header\"], \"header\");\n    this.overlay = new Overlay();\n    this.indexedDB = IndexedDB.getInstance();\n    this.modalReg = ModalReg.getInstance();\n    this.btnReg = new Btn([\"header__btn-register\", \"btn\", \"btn--light\"]);\n    this.btnReg.element.id = \"playerReg\";\n    this.btnReg.element.textContent = \"Register new player\";\n    this.btnReg.element.addEventListener(\"click\", () => {\n      if (!this.isRegister) {\n        this.modalReg.element.append(this.overlay.element);\n        this.modalReg.createModal();\n        this.modalReg.modalReg?.addEventListener(\"submit\", () => {\n          this.btnReg.element.textContent = \"Start Game\";\n          // FIX\n          setTimeout(() => {\n            this.createAvatar(this.indexedDB.data.image as string);\n          }, 1500);\n          this.isRegister = true;\n        });\n      }\n    });\n    this.headerNavListItem = this.element.querySelectorAll(\n      \".header__nav-list-item\"\n    );\n  }\n\n  public static getInstance(): Header {\n    if (!Header.instance) {\n      Header.instance = new Header();\n    }\n\n    return Header.instance;\n  }\n\n  createHeader(): void {\n    const headerWrapper = document.createElement(\"div\");\n    headerWrapper.classList.add(\"header__wrapper\");\n    this.element.appendChild(headerWrapper);\n\n    this.headerContainer = document.createElement(\"div\");\n    this.headerContainer.classList.add(\"header__container\");\n    headerWrapper.appendChild(this.headerContainer);\n  }\n\n  createLogo(): void {\n    const logoLink = document.createElement(\"a\");\n    logoLink.classList.add(\"header__logo\");\n    logoLink.href = \"./app.html\";\n    this.headerContainer?.append(logoLink);\n\n    logoLink.insertAdjacentHTML(\n      \"afterbegin\",\n      `<span class=\"header__logo-item\">Match</span><span\n    class=\"header__logo-item\">Match</span>`\n    );\n  }\n\n  createNav(): void {\n    const nav = document.createElement(\"nav\");\n    nav.classList.add(\"header__nav\");\n    this.headerContainer?.append(nav);\n\n    const navList = document.createElement(\"ul\");\n    navList.classList.add(\"header__nav-list\");\n    nav.append(navList);\n\n    navList.insertAdjacentHTML(\n      \"afterbegin\",\n      `\n    <li class=\"header__nav-list-item\" data-link=\"about\">\n              <a href=\"#about\" class=\"header__nav-link\">\n                <picture class=\"header__nav-list-item-img\"><img src=\"./assets/icons/question.svg\" alt=\"about game\">\n                </picture>About Game\n              </a>\n            </li>\n            <li class=\"header__nav-list-item\" data-link=\"best-score\">\n              <a href=\"#best-score\" class=\"header__nav-link\">\n                <picture class=\"header__nav-list-item-img header__nav-list-item-img--score\"><img src=\"./assets/icons/star.svg\" alt=\"best score\"></picture>Best\n                Score\n              </a>\n            </li>\n            <li class=\"header__nav-list-item\" data-link=\"game-settings\">\n              <a href=\"#game-settings\" class=\"header__nav-link\">\n                <picture class=\"header__nav-list-item-img\"><img src=\"./assets/icons/settings.svg\" alt=\"game Settings\">\n                </picture>\n                Game Settings\n              </a>\n            </li>`\n    );\n    this.headerNavListItem = this.element.querySelectorAll(\n      \".header__nav-list-item\"\n    );\n  }\n\n  createBtn() {\n    this.headerContainer?.append(this.btnReg.element);\n  }\n\n  createAvatar(IDBImage: string | ArrayBuffer | null) {\n    this.headerContainer?.insertAdjacentHTML(\n      \"beforeend\",\n      `<picture class=\"header__avatar\">\n    <img src=\"${IDBImage}\" alt=\"avatar\">\n  </picture>\n    `\n    );\n  }\n}\n","import { BaseComponent } from \"../components/base-components\";\n\nexport class Main extends BaseComponent {\n  readonly mainContainer: HTMLDivElement;\n\n  constructor() {\n    super(\"main\", [\"main\"], \"main\");\n\n    const mainWrapper = document.createElement(\"div\");\n    mainWrapper.classList.add(\"main__wrapper\");\n    this.element.append(mainWrapper);\n\n    this.mainContainer = document.createElement(\"div\");\n    this.mainContainer.classList.add(\"main__container\");\n    mainWrapper.append(this.mainContainer);\n  }\n}\n","import { BaseComponent } from \"../components/base-components\";\n\nexport class AboutGame extends BaseComponent {\n  constructor() {\n    super(\"div\", [\"about__game\"]);\n    this.element.insertAdjacentHTML(\n      \"afterbegin\",\n      `\n    <h2 class=\"about__game-title\">How to play?</h2>\n          <div class=\"about__game-grid\">\n            <div class=\"about__game-register--left\">\n              <span class=\"about__game-number\">1</span>\n              <p class=\"about__game-text\">Register new player in game</p>\n            </div>\n            <div class=\"about__game-register--right\">\n              <picture class=\"about__game-picture\">\n                <img src=\"./assets/img/register-form.jpg\" alt=\"form example\">\n              </picture>\n            </div>\n            <div class=\"about__game-settings--left\">\n              <span class=\"about__game-number\">2</span>\n              <p class=\"about__game-text\">Configure your game settings</p>\n            </div>\n            <div class=\"about__game-settings--right\">\n              <picture class=\"about__game-picture\">\n                <img src=\"./assets/img/game-settings.jpg\" alt=\"form example\">\n              </picture>\n            </div>\n            <div class=\"about__game-start--left\">\n              <span class=\"about__game-number\">3</span>\n              <p class=\"about__game-text\">Start you new game! Remember card positions and match it before times up.</p>\n            </div>\n            <div class=\"about__game-start--right\">\n              <picture class=\"about__game-picture\">\n                <img src=\"./assets/img/cards-example.jpg\" alt=\"form example\">\n              </picture>\n            </div>\n          </div>`\n    );\n  }\n}\n","import { BaseComponent } from \"../components/base-components\";\nimport { IndexedDB } from \"../database/indexedDB\";\n\nexport class BestScore extends BaseComponent {\n  private indexedDB: IndexedDB;\n\n  private bestScoreWrapper!: HTMLDivElement;\n\n  private players: Array<{\n    name: string;\n    lastName: string;\n    email: string;\n    image: string | ArrayBuffer | null;\n    score: number;\n  }>;\n\n  private name: string;\n\n  private lastName: string;\n\n  private email: string;\n\n  private image: string;\n\n  private score: number;\n\n  constructor() {\n    super(\"div\", [\"best__score\"]);\n    this.indexedDB = IndexedDB.getInstance();\n    this.players = [];\n    this.name = \"\";\n    this.lastName = \"\";\n    this.email = \"\";\n    this.image = \"\";\n    this.score = 0;\n    this.element.insertAdjacentHTML(\n      \"afterbegin\",\n      `\n    <h2 class=\"best__score-title\">Best players</h2>`\n    );\n    this.createWrapper();\n  }\n\n  async getPlayerData() {\n    return new Promise((res) => {\n      this.players = this.indexedDB.allRecors;\n      res(this.fillData());\n    });\n  }\n\n  fillData() {\n    this.bestScoreWrapper.innerHTML = \"\";\n    this.players.forEach((player) => {\n      this.name = player.name;\n      this.lastName = player.lastName;\n      this.email = player.email;\n      this.image = player.image as string;\n      this.score = player.score;\n      this.createPlayer();\n    });\n  }\n\n  createWrapper() {\n    this.bestScoreWrapper = document.createElement(\"div\") as HTMLDivElement;\n    this.bestScoreWrapper.classList.add(\"best__score-wrapper\");\n    this.element.append(this.bestScoreWrapper);\n  }\n\n  createPlayer() {\n    const bestScoreResult = document.createElement(\"div\");\n    bestScoreResult.classList.add(\"best__score-result\");\n    this.bestScoreWrapper.append(bestScoreResult);\n\n    if (!this.image) {\n      this.image = \"./assets/img/player1.jpg\";\n    }\n\n    bestScoreResult.insertAdjacentHTML(\n      \"afterbegin\",\n      `<picture class=\"best__score-avatar\">\n    <img src=\"${this.image}\" alt=\"player\">\n  </picture>\n  <div class=\"best__score-player\">\n    <p class=\"best__score-player-name\">${this.name} ${this.lastName}</p>\n    <p class=\"best__score-player-e-mail\">${this.email}</p>\n  </div>\n  <div class=\"best__score-score\">\n    <p class=\"best__score-text\">Score: <span class=\"best__score-numbers\">${this.score}</span></p>\n  </div>`\n    );\n  }\n}\n","import { BaseComponent } from \"../components/base-components\";\nimport { Btn } from \"../components/buttons/buttons\";\nimport { CardsField } from \"../components/cards-field/cards-field\";\nimport { Card } from \"../components/cards/cards\";\nimport { Timer } from \"../components/timer/timer\";\nimport { IndexedDB } from \"../database/indexedDB\";\nimport { Router } from \"../router/router\";\nimport { delay } from \"../shared/delay\";\n\nconst FLIP_DELAY = 1000;\n\nexport class Game extends BaseComponent {\n  private static instance: Game;\n\n  private readonly timer: Timer;\n\n  private indexedDB: IndexedDB;\n\n  private readonly cardsField: CardsField;\n\n  private readonly BtnSubmit: Btn;\n\n  private readonly router: Router;\n\n  private activeCard?: Card;\n\n  private isAnimation = false;\n\n  private countCards: number;\n\n  private successMatch: number;\n\n  private wrongMatch: number;\n\n  private windowModal!: HTMLDivElement;\n\n  private gameTimers!: ReturnType<typeof setTimeout>;\n\n  constructor() {\n    super(\"div\", [\"game\"]);\n    this.indexedDB = IndexedDB.getInstance();\n    this.timer = new Timer();\n    this.router = Router.getInstance();\n    this.cardsField = new CardsField();\n    this.BtnSubmit = new Btn([\"game__congrats-btn\", \"btn\", \"btn--blue\"]);\n    this.BtnSubmit.element.textContent = \"OK\";\n    this.BtnSubmit.element.addEventListener(\"click\", () => {\n      this.clearModal();\n      window.location.hash = \"best-score\";\n      this.router.navigate();\n    });\n    this.countCards = 0;\n    this.successMatch = 0;\n    this.wrongMatch = 0;\n    this.element.append(this.timer.element, this.cardsField.element);\n  }\n\n  public static getInstance(): Game {\n    if (!Game.instance) {\n      Game.instance = new Game();\n    }\n\n    return Game.instance;\n  }\n\n  newGame(images: string[], size: number) {\n    this.clearModal();\n    clearTimeout(this.gameTimers);\n    this.cardsField.clear();\n    this.timer.stopTimer();\n    this.timer.clearTimer();\n    this.timer.countDownTimer();\n    setTimeout(() => {\n      this.indexedDB.getRecord(\"user\");\n    }, 500);\n    const root = document.documentElement;\n    root.style.setProperty(\"--grid-rows\", `${size / Math.sqrt(size)}`);\n    root.style.setProperty(\"--grid-cols\", `${size / Math.sqrt(size)}`);\n    const gameFieldSize = [];\n    let indexHelper = 0;\n    for (let i = 0; i < size / 2; i++) {\n      gameFieldSize.push(images[indexHelper]);\n      indexHelper += 1;\n      if (indexHelper === images.length) {\n        indexHelper = 0;\n      }\n    }\n\n    const cards = gameFieldSize\n      .concat(gameFieldSize)\n      .map((url) => new Card(url))\n      .sort(() => Math.random() - 0.5);\n    this.countCards = cards.length;\n\n    cards.forEach((card) =>\n      card.element.addEventListener(\"click\", () => {\n        this.cardHandler(card);\n      })\n    );\n\n    this.cardsField.addCards(cards);\n    this.gameTimers = setTimeout(() => {\n      this.timer.stopTimer();\n      this.timer.startTimer();\n    }, 30000);\n  }\n\n  private async cardHandler(card: Card) {\n    if (this.isAnimation) return;\n    if (!card.isFlipped) return;\n    this.isAnimation = true;\n\n    await card.flipToBack();\n\n    if (!this.activeCard) {\n      this.activeCard = card;\n      this.isAnimation = false;\n      return;\n    }\n\n    if (this.activeCard.image === card.image) {\n      this.activeCard.element.classList.add(\"card--success\");\n      card.element.classList.add(\"card--success\");\n      this.countCards -= 2;\n      this.successMatch += 1;\n      if (this.countCards === 0) {\n        const playerData = this.indexedDB.data;\n        playerData.score = this.outputResult();\n        this.indexedDB.updateRecord(\"user\", playerData);\n        setTimeout(() => {\n          this.indexedDB.getAllRecords(\"user\", \"rating\");\n        }, 500);\n        this.createModal(this.timer.minutes, this.timer.seconds);\n        this.successMatch = 0;\n        this.wrongMatch = 0;\n        this.timer.stopTimer();\n      }\n    }\n\n    if (this.activeCard.image !== card.image) {\n      this.wrongMatch += 1;\n      this.activeCard.element.classList.add(\"card--wrong\");\n      card.element.classList.add(\"card--wrong\");\n      await delay(FLIP_DELAY);\n      this.activeCard.element.classList.remove(\"card--wrong\");\n      card.element.classList.remove(\"card--wrong\");\n      await Promise.all([this.activeCard.flipToFront(), card.flipToFront()]);\n    }\n\n    this.activeCard = undefined;\n    this.isAnimation = false;\n  }\n\n  createModal(min: number, sec: number) {\n    this.windowModal = document.createElement(\"div\");\n    this.windowModal.classList.add(\"game__congrats\");\n    this.element.append(this.windowModal);\n\n    this.windowModal.insertAdjacentHTML(\n      \"afterbegin\",\n      `\n      <p class=\"game__congrats-text\">Congratulations! You successfully found all matches on <span\n      class=\"game__congrats-timer\">${min} minutes ${sec} seconds </span>.</p> Your score ${this.outputResult()}`\n    );\n    this.windowModal.append(this.BtnSubmit.element);\n  }\n\n  clearModal() {\n    if (this.element.lastElementChild?.contains(this.windowModal)) {\n      this.element.lastElementChild?.remove();\n    }\n  }\n\n  outputResult() {\n    const result =\n      (this.successMatch - this.wrongMatch) * 100 -\n      this.timer.seconsForScore * 10;\n    return result < 0 ? 0 : result;\n  }\n}\n","import { BaseComponent } from \"../components/base-components\";\n\nexport class GameSettings extends BaseComponent {\n  private static instance: GameSettings;\n\n  private readonly cardShirt: HTMLSelectElement;\n\n  private readonly difficultGame: HTMLSelectElement;\n\n  cardShirtValue: number | undefined;\n\n  difficultGameValue: number | undefined;\n\n  constructor() {\n    super(\"div\", [\"game__settings\"]);\n    this.cardShirtValue = undefined;\n    this.difficultGameValue = undefined;\n    this.element.insertAdjacentHTML(\n      \"afterbegin\",\n      `<div class=\"game__settings-wrapper\">\n    <label for=\"game-cards\" class=\"game__settings-title\">Game Cards</label>\n    <select name=\"game-cards\" id=\"game-cards-select\" class=\"game__settings-select-cards\">\n      <option value=\"\" disabled selected>Select game cards type</option>\n      <option value=\"0\">kitty</option>\n      <option value=\"1\">sport</option>\n      <option value=\"2\">computer</option>\n    </select>\n  </div>\n  <div class=\"game__settings-wrapper\">\n    <label for=\"game-difficult\" class=\"game__settings-title\">Difficulty</label>\n    <select name=\"game-difficult\" id=\"game-difficult-select\" class=\"game__settings-select-difficult\">\n      <option value=\"\" disabled selected>Select field size</option>\n      <option value=\"4\">2 x 2</option>\n      <option value=\"16\">4 x 4</option>\n      <option value=\"36\">6 x 6</option>\n    </select>\n  </div>`\n    );\n    this.cardShirt = this.element.querySelector(\n      \"#game-cards-select\"\n    ) as HTMLSelectElement;\n    this.cardShirt?.addEventListener(\"change\", () => {\n      this.cardShirtValue = this.cardShirt?.selectedIndex;\n    });\n    this.difficultGame = this.element.querySelector(\n      \"#game-difficult-select\"\n    ) as HTMLSelectElement;\n    this.difficultGame?.addEventListener(\"change\", () => {\n      this.difficultGameValue = +this.difficultGame?.value;\n    });\n  }\n\n  clearSelects() {\n    this.cardShirt.selectedIndex = 0;\n    this.difficultGame.selectedIndex = 0;\n  }\n\n  public static getInstance(): GameSettings {\n    if (!GameSettings.instance) {\n      GameSettings.instance = new GameSettings();\n    }\n\n    return GameSettings.instance;\n  }\n}\n","import { ModalReg } from \"../components/modal-register/modal-register\";\nimport { Header } from \"../layout/header\";\nimport { Main } from \"../layout/main\";\nimport { GameSettings } from \"../pages/gameSettings\";\n\nexport class Render {\n  readonly fragment: DocumentFragment;\n\n  private readonly header: Header;\n\n  private readonly modalReg: ModalReg;\n\n  private readonly main: Main;\n\n  private readonly gameSettings: GameSettings;\n\n  private static instance: Render;\n\n  private static bodyContainer = document.body;\n\n  constructor(private readonly rootElement: HTMLElement) {\n    this.fragment = document.createDocumentFragment();\n\n    this.modalReg = ModalReg.getInstance();\n\n    this.header = Header.getInstance();\n    this.header.createHeader();\n    this.header.createLogo();\n    this.header.createNav();\n    this.header.createBtn();\n\n    this.main = new Main();\n\n    this.gameSettings = GameSettings.getInstance();\n  }\n\n  public static getInstance(): Render {\n    if (!Render.instance) {\n      Render.instance = new Render(this.bodyContainer);\n    }\n\n    return Render.instance;\n  }\n\n  render(): void {\n    this.fragment.append(this.modalReg.element);\n    this.fragment.append(this.header.element);\n    this.fragment.append(this.main.element);\n    this.rootElement.append(this.fragment);\n  }\n\n  renderPage(page: HTMLElement, nameRoute = \"\") {\n    this.main.mainContainer.innerHTML = \"\";\n    if (this.header.btnReg.element.textContent === \"Stop Game\") {\n      this.header.btnReg.element.textContent = \"Start Game\";\n      this.gameSettings.cardShirtValue = undefined;\n      this.gameSettings.difficultGameValue = undefined;\n    }\n    this.main.mainContainer.append(page);\n    for (const entry of this.header.headerNavListItem.entries()) {\n      entry\n        .map((x) => x as HTMLElement)\n        .forEach((item, i) => {\n          if (i === 1) {\n            item.classList.remove(\"header__nav-list-item--active\");\n            if (item.dataset.link === nameRoute) {\n              item.classList.add(\"header__nav-list-item--active\");\n            }\n          }\n        });\n    }\n  }\n}\n","export class Router {\n  private static instance: Router;\n\n  private routes: Array<{ name: string; component(): void }>;\n\n  constructor() {\n    this.routes = [];\n  }\n\n  public static getInstance(): Router {\n    if (!Router.instance) {\n      Router.instance = new Router();\n    }\n\n    return Router.instance;\n  }\n\n  addRoute(arr: Array<{ name: string; component(): void }>) {\n    arr.forEach((route) => this.routes.push(route));\n  }\n\n  onloadRoute() {\n    window.location.hash = \"about\";\n    const deffaultRoute = this.routes.find((route) => route.name === \"about\");\n    if (!deffaultRoute) throw new Error(\"Deffault route not find\");\n    deffaultRoute.component();\n  }\n\n  navigate() {\n    const currentRouteName = window.location.hash.slice(1);\n    const currentRoute = this.routes.find(\n      (route) => route.name === currentRouteName\n    );\n    if (!currentRoute) throw new Error(\"Current route not find\");\n    currentRoute.component();\n  }\n}\n","export function delay(timeout: number): Promise<void> {\n  return new Promise((res) => {\n    setTimeout(res, timeout);\n  });\n}\n","import { AboutGame } from \"../pages/aboutGame\";\nimport { BestScore } from \"../pages/bestScore\";\nimport { Game } from \"../pages/game\";\nimport { GameSettings } from \"../pages/gameSettings\";\nimport { Render } from \"../render/render\";\n\nconst render = Render.getInstance();\nconst aboutGamePage = new AboutGame();\nconst gamePage = Game.getInstance();\nconst gameSettingsPage = GameSettings.getInstance();\nconst bestScorePage = new BestScore();\n\nexport const routing: Array<{ name: string; component(): void }> = [\n  {\n    name: \"about\",\n    component: () => {\n      render.renderPage(aboutGamePage.element, \"about\");\n    },\n  },\n  {\n    name: \"best-score\",\n    component: () => {\n      bestScorePage.getPlayerData();\n      render.renderPage(bestScorePage.element, \"best-score\");\n    },\n  },\n  {\n    name: \"game-settings\",\n    component: () => {\n      render.renderPage(gameSettingsPage.element, \"game-settings\");\n    },\n  },\n  {\n    name: \"game\",\n    component: () => {\n      render.renderPage(gamePage.element);\n    },\n  },\n];\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../\";","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(174);\n"],"sourceRoot":""}